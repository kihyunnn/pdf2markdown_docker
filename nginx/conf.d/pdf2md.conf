# HTTP -> HTTPS 리다이렉트
server {
    listen 80;
    server_name YOUR_DOMAIN.com;
    
    # Let's Encrypt 인증서 갱신을 위한 경로
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }
    
    # 나머지 모든 요청을 HTTPS로 리다이렉트
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS 메인 서버
server {
    listen 443 ssl http2;
    server_name YOUR_DOMAIN.com;
    
    # SSL 인증서 설정
    ssl_certificate /etc/letsencrypt/live/YOUR_DOMAIN.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/YOUR_DOMAIN.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/YOUR_DOMAIN.com/chain.pem;
    
    # 보안 헤더 (HTTPS 전용)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'self';" always;
    
    # 로그 설정
    access_log /var/log/nginx/pdf2md.access.log main;
    error_log /var/log/nginx/pdf2md.error.log warn;
    
    # Rate limiting 적용
    limit_req zone=api burst=20 nodelay;
    limit_conn conn_limit_per_ip 20;
    
    # 업로드된 파일 서빙 (캐시 적용)
    location ^~ /uploads/ {
        alias /var/www/uploads/;
        
        # 캐시 설정
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff" always;
        
        # 보안: 실행 가능한 파일 차단
        location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
            deny all;
        }
        
        # 파일 존재하지 않으면 404
        try_files $uri =404;
    }
    
    # API 엔드포인트 (더 엄격한 rate limiting)
    location ^~ /api/ {
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://pdf2md:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # 타임아웃 설정
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 버퍼링 설정
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
    
    # 파일 업로드 엔드포인트 (특별한 rate limiting)
    location ^~ /api/upload {
        limit_req zone=upload burst=5 nodelay;
        
        # 큰 파일 업로드를 위한 타임아웃 증가
        proxy_connect_timeout 30s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        proxy_pass http://pdf2md:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # 업로드 진행률 표시를 위한 설정
        proxy_request_buffering off;
        proxy_buffering off;
    }
    
    # 정적 파일 (Next.js)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://pdf2md:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 캐시 설정
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # 압축 활성화
        gzip_static on;
    }
    
    # 메인 애플리케이션
    location / {
        proxy_pass http://pdf2md:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # WebSocket 지원
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 타임아웃 설정
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Next.js Hot Reload 지원
        proxy_cache_bypass $http_upgrade;
    }
    
    # 헬스체크 엔드포인트 (로그 제외)
    location = /api/health {
        proxy_pass http://pdf2md:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        access_log off;
    }
    
    # robots.txt
    location = /robots.txt {
        proxy_pass http://pdf2md:3000;
        proxy_set_header Host $host;
        
        expires 1d;
        access_log off;
    }
    
    # 보안: 숨김 파일 및 민감한 파일 차단
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~* \.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# 잘못된 Host 헤더 차단
server {
    listen 80 default_server;
    listen 443 ssl http2 default_server;
    server_name _;
    
    # 기본 SSL 인증서 (자체 서명)
    ssl_certificate /etc/nginx/ssl/default.crt;
    ssl_certificate_key /etc/nginx/ssl/default.key;
    
    return 444;  # 연결 종료
} 